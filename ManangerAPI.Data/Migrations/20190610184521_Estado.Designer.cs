// <auto-generated />
using System;
using ManangerAPI.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace manangerapi.data.Migrations
{
    [DbContext(typeof(ContextoDb))]
    [Migration("20190610184521_Estado")]
    partial class Estado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PerfilId");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Beneficiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<int>("CidadeId");

                    b.Property<string>("Complemento");

                    b.Property<int>("ContratanteId");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int>("EstadoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<string>("Rua");

                    b.Property<int>("Sexo");

                    b.Property<int>("Status");

                    b.Property<string>("Telefone");

                    b.Property<bool>("TermoDeResponsalidade");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ContratanteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Beneficiario");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.BeneficiarioCondicaoClinica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeneficiarioId");

                    b.Property<int>("CondicaoClinicaId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.HasIndex("CondicaoClinicaId");

                    b.ToTable("BeneficiarioCondicaoClinica");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<string>("Uf");

                    b.HasKey("Id");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Competencia");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.CondicaoClinica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("CondicaoClinica");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<int>("CidadeId");

                    b.Property<string>("Complemento");

                    b.Property<int>("EstadoId");

                    b.Property<string>("Numero");

                    b.Property<string>("Rua");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoUf");

                    b.Property<string>("Nome");

                    b.Property<int>("Regiao");

                    b.Property<int>("Status");

                    b.Property<string>("Uf");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Funcionalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<string>("Path");

                    b.Property<int>("PerfilId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Funcionalidade");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeneficiarioId");

                    b.Property<string>("Bula");

                    b.Property<string>("ContraIndicacao");

                    b.Property<string>("EfeitoColateral");

                    b.Property<string>("Indicao");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<int>("Tipo");

                    b.Property<int>("ViaDeUso");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.PrestadorDeServicoCompetencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetenciaId");

                    b.Property<int>("PrestadorDeServicoId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompetenciaId");

                    b.HasIndex("PrestadorDeServicoId");

                    b.ToTable("PrestadorDeServicoCompetencia");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Sexo");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.StatusEntidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Referencia");

                    b.HasKey("Id");

                    b.ToTable("StatusEntidade");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Analisado");

                    b.Property<bool>("Aprovado");

                    b.Property<string>("Comentario");

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Imagem");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<int>("Sexo");

                    b.Property<int>("Status");

                    b.Property<string>("Telefone");

                    b.Property<bool>("Termos");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Administrador", b =>
                {
                    b.HasBaseType("ManangerAPI.Data.Entidades.Usuario");


                    b.ToTable("Administrador");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Contratante", b =>
                {
                    b.HasBaseType("ManangerAPI.Data.Entidades.Usuario");


                    b.ToTable("Contratante");

                    b.HasDiscriminator().HasValue("Contratante");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Gestor", b =>
                {
                    b.HasBaseType("ManangerAPI.Data.Entidades.Usuario");

                    b.Property<string>("Curriculo");

                    b.ToTable("Gestor");

                    b.HasDiscriminator().HasValue("Gestor");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.PrestadorDeServico", b =>
                {
                    b.HasBaseType("ManangerAPI.Data.Entidades.Usuario");


                    b.ToTable("PrestadorDeServico");

                    b.HasDiscriminator().HasValue("PrestadorDeServico");
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Acesso", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.Usuario", "Usuario")
                        .WithMany("Acessos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Beneficiario", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.Contratante", "Usuario")
                        .WithMany("Beneficiarios")
                        .HasForeignKey("ContratanteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.BeneficiarioCondicaoClinica", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Beneficiario", "Beneficiario")
                        .WithMany("BeneficiarioCondicaoClinica")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.CondicaoClinica", "CondicaoClinica")
                        .WithMany("BeneficiarioCondicaoClinica")
                        .HasForeignKey("CondicaoClinicaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Endereco", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.Usuario", "Usuario")
                        .WithOne("Endereco")
                        .HasForeignKey("ManangerAPI.Data.Entidades.Endereco", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Funcionalidade", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Perfil", "Perfil")
                        .WithMany("Funcionalidades")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.Medicamento", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Beneficiario", "Beneficiario")
                        .WithMany("Medicamentos")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManangerAPI.Data.Entidades.PrestadorDeServicoCompetencia", b =>
                {
                    b.HasOne("ManangerAPI.Data.Entidades.Competencia", "Competencia")
                        .WithMany("PrestadorDeServicoCompetencia")
                        .HasForeignKey("CompetenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ManangerAPI.Data.Entidades.PrestadorDeServico", "PrestadorDeServico")
                        .WithMany("PrestadorDeServicoCompetencia")
                        .HasForeignKey("PrestadorDeServicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
